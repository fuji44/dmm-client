/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import {
  type ActressSearchRequestBuilder,
  ActressSearchRequestBuilderRequestsMetadata,
} from "./actressSearch/index.ts";
// @ts-ignore
import {
  type AuthorSearchRequestBuilder,
  AuthorSearchRequestBuilderRequestsMetadata,
} from "./authorSearch/index.ts";
// @ts-ignore
import {
  type FloorListRequestBuilder,
  FloorListRequestBuilderRequestsMetadata,
} from "./floorList/index.ts";
// @ts-ignore
import {
  type GenreSearchRequestBuilder,
  GenreSearchRequestBuilderRequestsMetadata,
} from "./genreSearch/index.ts";
// @ts-ignore
import {
  type ItemListRequestBuilder,
  ItemListRequestBuilderRequestsMetadata,
} from "./itemList/index.ts";
// @ts-ignore
import {
  type MakerSearchRequestBuilder,
  MakerSearchRequestBuilderRequestsMetadata,
} from "./makerSearch/index.ts";
// @ts-ignore
import {
  type SeriesSearchRequestBuilder,
  SeriesSearchRequestBuilderRequestsMetadata,
} from "./seriesSearch/index.ts";
// @ts-ignore
import {
  apiClientProxifier,
  type BaseRequestBuilder,
  type KeysToExcludeForNavigationMetadata,
  type NavigationMetadata,
  registerDefaultDeserializer,
  registerDefaultSerializer,
  type RequestAdapter,
} from "@microsoft/kiota-abstractions";
// @ts-ignore
import {
  FormParseNodeFactory,
  FormSerializationWriterFactory,
} from "@microsoft/kiota-serialization-form";
// @ts-ignore
import {
  JsonParseNodeFactory,
  JsonSerializationWriterFactory,
} from "@microsoft/kiota-serialization-json";
// @ts-ignore
import { MultipartSerializationWriterFactory } from "@microsoft/kiota-serialization-multipart";
// @ts-ignore
import {
  TextParseNodeFactory,
  TextSerializationWriterFactory,
} from "@microsoft/kiota-serialization-text";

/**
 * Instantiates a new {@link DMMClient} and sets the default values.
 * @param requestAdapter The request adapter to use to execute the requests.
 */
// @ts-ignore
export function createDMMClient(requestAdapter: RequestAdapter): DMMClient {
  registerDefaultSerializer(JsonSerializationWriterFactory);
  registerDefaultSerializer(TextSerializationWriterFactory);
  registerDefaultSerializer(FormSerializationWriterFactory);
  registerDefaultSerializer(MultipartSerializationWriterFactory);
  registerDefaultDeserializer(JsonParseNodeFactory);
  registerDefaultDeserializer(TextParseNodeFactory);
  registerDefaultDeserializer(FormParseNodeFactory);
  if (requestAdapter.baseUrl === undefined || requestAdapter.baseUrl === "") {
    requestAdapter.baseUrl = "https://api.dmm.com/affiliate/v3";
  }
  const pathParameters: Record<string, unknown> = {
    "baseurl": requestAdapter.baseUrl,
  };
  return apiClientProxifier<DMMClient>(
    requestAdapter,
    pathParameters,
    DMMClientNavigationMetadata,
    undefined,
  );
}
/**
 * The main entry point of the SDK, exposes the configuration and the fluent API.
 */
export interface DMMClient extends BaseRequestBuilder<DMMClient> {
  /**
   * The ActressSearch property
   */
  get actressSearch(): ActressSearchRequestBuilder;
  /**
   * The AuthorSearch property
   */
  get authorSearch(): AuthorSearchRequestBuilder;
  /**
   * The FloorList property
   */
  get floorList(): FloorListRequestBuilder;
  /**
   * The GenreSearch property
   */
  get genreSearch(): GenreSearchRequestBuilder;
  /**
   * The ItemList property
   */
  get itemList(): ItemListRequestBuilder;
  /**
   * The MakerSearch property
   */
  get makerSearch(): MakerSearchRequestBuilder;
  /**
   * The SeriesSearch property
   */
  get seriesSearch(): SeriesSearchRequestBuilder;
}
/**
 * Uri template for the request builder.
 */
export const DMMClientUriTemplate = "{+baseurl}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DMMClientNavigationMetadata: Record<
  Exclude<keyof DMMClient, KeysToExcludeForNavigationMetadata>,
  NavigationMetadata
> = {
  actressSearch: {
    requestsMetadata: ActressSearchRequestBuilderRequestsMetadata,
  },
  authorSearch: {
    requestsMetadata: AuthorSearchRequestBuilderRequestsMetadata,
  },
  floorList: {
    requestsMetadata: FloorListRequestBuilderRequestsMetadata,
  },
  genreSearch: {
    requestsMetadata: GenreSearchRequestBuilderRequestsMetadata,
  },
  itemList: {
    requestsMetadata: ItemListRequestBuilderRequestsMetadata,
  },
  makerSearch: {
    requestsMetadata: MakerSearchRequestBuilderRequestsMetadata,
  },
  seriesSearch: {
    requestsMetadata: SeriesSearchRequestBuilderRequestsMetadata,
  },
};
/* tslint:enable */
/* eslint-enable */
